@page "/brokers/fyers/credentials"
@using NaniTrader.Localization
@inherits NaniTraderComponentBase
@inject AbpBlazorMessageLocalizerHelper<NaniTraderResource> LH
@inject IFyersCredentialsAppService FyersCredentialsAppService
@inject NavigationManager NavigationManager

<Card>
    <CardHeader>
        <Row>
            <Column ColumnSize="ColumnSize.Is6">
                <h2>@L["FyersCredentials"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                <Paragraph Alignment="TextAlignment.Right">
                    <Button Color="Color.Primary"
                            Clicked="OpenCreateFyersCredentialsModal">
                        @L["NewFyersCredentials"]
                    </Button>
                </Paragraph>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="FyersCredentialsDto"
                  Data="FyersCredentialsList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="FyersCredentialsDto"
                                Field="@nameof(FyersCredentialsDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                <DropdownItem Clicked="() => OpenEditFyersCredentialsModal(context)">
                                    @L["Edit"]
                                </DropdownItem>
                                <DropdownItem Clicked="() => DeleteFyersCredentialsAsync(context)">
                                    @L["Delete"]
                                </DropdownItem>
                                <DropdownItem Clicked="() => GenerateFyersTokenAsync(context)">
                                    @L["GenerateToken"]
                                </DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="FyersCredentialsDto"
                                Field="@nameof(FyersCredentialsDto.AppId)"
                                Caption="@L["Name"]"></DataGridColumn>
                <DataGridColumn TItem="FyersCredentialsDto"
                                Field="@nameof(FyersCredentialsDto.SecretId)"
                                Caption="@L["SecretId"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateFyersCredentialsModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewFyersCredentials"]</ModalTitle>
                <CloseButton Clicked="CloseCreateFyersCredentialsModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewFyersCredentials" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["AppId"]</FieldLabel>
                            <TextEdit @bind-Text="@NewFyersCredentials.AppId">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["SecretId"]</FieldLabel>
                            <TextEdit @bind-Text="@NewFyersCredentials.SecretId">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateFyersCredentialsModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateFyersCredentialsAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditFyersCredentialsModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingFyersCredentials.SecretId</ModalTitle>
                <CloseButton Clicked="CloseEditFyersCredentialsModal" />
                    </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingFyersCredentials" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["SecretId"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingFyersCredentials.SecretId">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditFyersCredentialsModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateFyersCredentialsAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>